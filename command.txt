1. git init //初始化git仓库
2. git add <file> //可以多次使用git add命令，将文件添加到暂存区
3. git commit -m '描述提交的内容' //讲暂存区的文件添加到git仓库
4. git status //查看当前git的状态
5. git diff <file> //查看改文件修改了那些内容
6. git log //查看提交日志
7. git log --pretty=oneline //简化git log
8. git reset --hard HEAD^ //回到上一个版本
   git reset --hard HEAD^^ //回到上上个版本
   git reset --hard HEAD~100 //回到上100个版本
9. git reset --hard <commit id>//commit id不必写全可以写前五位
10. git reflog  //查看历史命令
11. git checkout -- <file> //撤回当前修改（删除），或者撤回git add后的修改（删除）
12. git reset HEAD <file> //把暂存区的修改撤销掉（unstage），重新放回工作区：
13. git rm <file> //删除一个文件 同git add命令功能一样
14. git remote add <remote-name> <url> //添加远程库
15. git push <远程主机名> <本地分支名>:<远程分支名> //将本地仓库推送到github
16. git clone <url> //克隆远程仓库
17. git branch <branch-name> //创建分支
18. git checkout -b <branch-name> //创建分支并切换
19. git checkout <branch-name> //切换分支
20. git merge <branch-name> //指定分支合并到当前分支
21. git branch -d <branch-name> //删除指定分支
22. git merge --no-ff -m "merge with no-ff" dev //表示合并时禁用Fast forward
23. git stash //可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作：
24. git stash apply //恢复被‘储藏’的工作
25. git stash drop //删除stash储藏的内容
26. git stash pop //恢复的同时把stash内容也删了
27. git checkout -b <branch-name> origin/<branch-name> //创建远程origin的<branch-name>分支到本地
28. git pull //从远程抓取分支
29. git remote -v //查看远程库信息
30. git branch --set-upstream <branch-name> origin/<branch-name> //建立本地分支和远程分支的关联
33. git tag <tagname> //打标签
34. git rebase //变基
35. git tag <tagname> commit-id //为commit-id打标签
36. git show <tagname> //查看标签信息：
37. git tag -a <tagname> -m "blablabla..." //可以指定标签信息；
38. git push origin <tagname> //可以推送一个本地标签；
39. git push origin --tags //可以推送全部未推送过的本地标签；
40. git tag -d <tagname> //可以删除一个本地标签；
41. git push origin :refs/tags/<tagname> //可以删除一个远程标签。